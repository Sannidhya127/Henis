locker{
    a = 5
    b = "hey"
    c = 4+2/4*2-3
}

print a
print "yo"

# assigner = '='
# # libc = c.CDLL("libc.so.6")
# # libc.printf.argtypes = [c.c_char_p]
# def assign(line):
#     global assigner
#     params = line.split('=', 1)
#     if type(params[1]) == str:
#         # params[0] = c.create_string_buffer(100)
#         try:
#             params[1] = eval(params[1])
#         except:
#             pass
#         try:
#             final = params[1].strip().encode('utf-8')
#         except:
#             final = params[1]
#         params[0] = c.c_char_p(final.encode('utf-8'))
#     elif type(params[1]) == int:
#         try:
#             params[1] = eval(params[1])
#         except:
#             pass
#         params[0] = c.c_int(params[1])
#     elif type(params[1]) == float:
#         try:
#             params[1] = eval(params[1])
#         except:
#             pass
#         params[0] = c.c_float(params[1])
#     elif type(params[1]) == bool:
#         try:
#             params[1] = eval(params[1])
#         except:
#             pass
#         params[0] = c.c_bool(params[1])
#     else:   
#         print("Error: Invalid type")
#         return
    
#     prt = c.pointer(params[0])
#     print(prt.contents.value.decode('utf-8'))

